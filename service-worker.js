!function(){"use strict";const s=1684077728e3,e=`cache${s}`,a=["/client/client.80b142cc.js","/client/inject_styles.5607aec6.js","/client/index.a4536154.js","/client/about-after-effects.d3eed89c.js","/client/projects.9af470a1.js","/client/videos.53857614.js","/client/about.553b388f.js","/client/index.51991b7b.js","/client/[slug].0f7e76da.js"].concat(["/service-worker-index.html","/assets/Images/bloggeneral/newvideomanfla.PNG","/assets/Images/bloggeneral/rhcanvasscreenshot0.png","/assets/Images/bloggeneral/rhcanvasscreenshot1.png","/assets/Images/dam/1.png","/assets/Images/funnypics/konatamultiple.gif","/assets/Images/funnypics/miku-hi.gif","/assets/Images/funnypics/osakatable.gif","/assets/Images/funnypics/rumia-fish.gif","/assets/Images/social/explorer.gif","/assets/Images/social/github.png","/assets/Images/social/github32.png","/assets/Images/social/instagram.png","/assets/Images/social/instagram32.png","/assets/Images/social/twitter.png","/assets/Images/social/twitter32.png","/assets/Images/social/watermark.png","/assets/Images/social/youtube.svg","/assets/Images/social/youtube32.png","/assets/Images/tabs/buttontemplate.png","/assets/Images/tabs/buttontemplate_alt.png","/assets/Images/tabs/firefox.png","/assets/Images/tabs/hackadoll.png","/assets/Images/tabs/heavenstudio.png","/assets/Images/tabs/homepage.gif","/assets/Images/tabs/homepage.png","/assets/Images/tabs/killmebaby.png","/assets/Images/tabs/kym.png","/assets/Images/tabs/luckystar.png","/assets/Images/tabs/niconico.gif","/assets/Images/tabs/octagon.gif","/assets/Images/tabs/octagon.png","/assets/Images/tabs/octagon2.gif","/assets/Images/tabs/pepsiman.png","/assets/Images/tabs/projectfiles.png","/assets/Images/tabs/rhf.gif","/assets/Images/tabs/saraistupid.png","/assets/Images/tabs/starpelly.gif","/assets/Images/tabs/steam.png","/assets/Images/tabs/unixporn.png","/assets/Images/tabs/windows9.png","/assets/Images/tutorials/consoleDebugEnableColor.png","/assets/Images/tutorials/custom stroke/1.png","/assets/Images/tutorials/custom stroke/2.png","/assets/Images/tutorials/custom stroke/3.png","/assets/Images/tutorials/custom stroke/4.png","/assets/Images/tutorials/dropdownConsoleDebugDatabase.PNG","/assets/Images/tutorials/preferenceappearencecolor.png","/assets/Overla.png","/assets/Overlay2.png","/assets/Pause.png","/assets/Play.png","/assets/articlebg.png","/assets/bannerHome.gif","/assets/block.png","/assets/circle.png","/assets/cssource.png","/assets/floor.png","/assets/fonts/HelveticaNeue-Regular.otf","/assets/fonts/Valken__.otf","/assets/fonts/popjoy.otf","/assets/gaysecks.png","/assets/ladycupiddd.gif","/assets/mayo.ase","/assets/mayo.gif","/assets/mushrooms.png","/assets/notacircle.png","/assets/raichulooong.gif","/assets/sanick.gif","/assets/skins/bruh","/assets/skins/gdskin.png","/assets/skins/gdskinslim.png","/assets/skins/oldskin.png","/assets/skins/skin.png","/assets/skins/skinslim.png","/assets/stars.png","/assets/static.wav","/assets/tapefeed.mp3","/assets/text-bg.png","/assets/tiled static.gif","/bigotedbot.html","/css/gOoDStyLe.css","/css/layout.css","/css/otomad.css","/css/pelly.css","/files/about.txt","/files/greenscreens.html","/files/videos.html","/files.html","/global.css","/icon.png","/isicdxaninsanedemon.html","/js/otomad.js","/js/randomimage.js","/konatamonke.png","/libleftbad.html","/manifest.json","/otomad.html","/polcomp/polcomp.js","/polcomp/pooliticalcumpiss.png","/redditvalid.html","/rule34.html","/walroose/Nanami-Rounded-Book.ttf","/walroose/walroose.css","/walroose/walroose.js","/walroose/walroose.png","/walroose/walroosegone.png","/walroose.html"]),t=new Set(a);self.addEventListener("install",(s=>{s.waitUntil(caches.open(e).then((s=>s.addAll(a))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(s=>{s.waitUntil(caches.keys().then((async s=>{for(const a of s)a!==e&&await caches.delete(a);self.clients.claim()})))})),self.addEventListener("fetch",(e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const a=new URL(e.request.url),n=a.protocol.startsWith("http"),o=a.hostname===self.location.hostname&&a.port!==self.location.port,g=a.host===self.location.host&&t.has(a.pathname),i="only-if-cached"===e.request.cache&&!g;!n||o||i||e.respondWith((async()=>g&&await caches.match(e.request)||async function(e){const a=await caches.open(`offline${s}`);try{const s=await fetch(e);return a.put(e,s.clone()),s}catch(s){const t=await a.match(e);if(t)return t;throw s}}(e.request))())}))}();
